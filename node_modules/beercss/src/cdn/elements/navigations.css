nav > :is(ol, ul),
nav > :is(ol, ul) > li {
  all: unset;
}

nav,
.row,
a.row,
nav.drawer > :is(a, label),
nav.drawer > :is(ol, ul) > li > :is(a, label) {
  display: flex;
  align-items: center;
  align-self: normal;
  text-align: start;
  justify-content: flex-start;
  white-space: nowrap;
  gap: 1rem;
  margin: 0;
}

a.row {
  min-block-size: 3rem;
}

:is(nav, .row, .max) > :only-child,
nav > :is(ol, ul) > li > :only-child {
  margin: 0;
}

* + :is(nav, .row) {
  margin-block-start: 1rem;
}

:is(nav, .row) > * {
  margin: 0;
  white-space: normal;
  flex: none;
}

:is(nav, .row).no-space {
  gap: 0;
}

:is(nav, .row).no-space > .border + .border {
  border-inline-start: 0;
}

:is(nav, .row).medium-space {
  gap: 1.5rem;
}

:is(nav, .row).large-space {
  gap: 2rem;
}

:is(nav, .row) > .max,
:is(nav, .row) > :is(ol, ul) > .max,
nav.drawer > :is(a, label) > .max,
nav.drawer > :is(ol, ul) > li > :is(a, label) > .max {
  flex: 1;
}

:is(nav, .row).wrap {
  display: flex;
  flex-wrap: wrap;
}

:is(header, footer) > :is(nav, .row) {
  min-block-size: inherit;
}

:is(nav, .row) > .border.no-margin + .border.no-margin {
  border-inline-start: 0;
}

nav:is(.left, .right, .top, .bottom) {
  border: 0;
  position: fixed;
  color: var(--on-surface);
  transform: none;
  z-index: 100;
  block-size: auto;
  inline-size: auto;
  text-align: center;
  padding: 0.5rem;
  margin: 0;
  inset: 0;
}

nav:is(.left, .right) {
  inline-size: 5rem;
  justify-content: flex-start;
  flex-direction: column;
  background-color: var(--surface);
}

nav:is(.top, .bottom) {
  block-size: 5rem;
  justify-content: center;
  flex-direction: row;
  background-color: var(--surface-container);
}

nav.top {
  inset-block-end: auto;
}

nav.left {
  inset-inline-end: auto;
}

nav.right {
  inset-inline-start: auto;
}

nav.bottom {
  inset-block-start: auto;
}

nav.drawer {
  flex-direction: column;
  align-items: normal;
  inline-size: 20rem;
  gap: 0;
  padding: 0.5rem 1rem;
}

nav.drawer:is(.min, .max) {
  inline-size: auto;
}

nav.drawer.max {
  inline-size: 100%;
}

:is(nav, .row) > header {
  background-color: inherit;
}

nav:is(.left, .right) > header {
  transform: translateY(-0.5rem);
}

nav.drawer > header {
  transform: translateY(-0.75rem);
  min-block-size: 4.5rem;
  align-self: stretch;
}

nav.drawer > :is(a, label),
nav.drawer > :is(ol, ul) > li > :is(a, label),
a.row.wave {
  padding: 0.75rem;
  font-size: inherit;
}

nav.drawer > a,
nav.drawer > :is(ol, ul) > li > a {
  border-radius: 2rem;
}

nav.drawer > a:is(:hover, .active),
nav.drawer > :is(ol, ul) > li > a:is(:hover, .active) {
  background-color: var(--secondary-container);
}

nav.drawer > a:is(:hover, :focus, .active) > i,
nav.drawer > :is(ol, ul) > li > a:is(:hover, :focus, .active) > i {
  font-variation-settings: "FILL" 1;
}

nav > :is(ol, ul) {
  all: inherit;
  flex: auto;
}

nav:not(.left, .right, .bottom, .top) > :is(ol, ul) {
  padding: 0;
}

nav:is(.left, .right, .top, .bottom):not(.drawer) > a:not(.button, .chip),
nav:is(.left, .right, .top, .bottom):not(.drawer) > :is(ol, ul) > li > a:not(.button, .chip) {
  align-self: center;
  display: flex;
  flex-direction: column;
}

nav:is(.top, .bottom):not(.drawer) > a:not(.button, .chip),
nav:is(.top, .bottom):not(.drawer) > :is(ol, ul) > li > a:not(.button, .chip) {
  inline-size: 3.5rem;
}

nav:is(.left, .right, .top, .bottom):not(.drawer) > a:not(.button, .chip) > i,
nav:is(.left, .right, .top, .bottom):not(.drawer) > :is(ol, ul) > li > a:not(.button, .chip) > i {
  padding: 0.25rem;
  border-radius: 2rem;
  transition: padding var(--speed1) linear;
  margin: 0 auto;
}

nav:is(.left, .right, .top, .bottom):not(.drawer) > a:not(.button, .chip):is(:hover, :focus, .active) > i,
nav:is(.left, .right, .top, .bottom):not(.drawer) > :is(ol, ul) > li > a:not(.button, .chip):is(:hover, :focus, .active) > i {
  background-color: var(--secondary-container);
  color: var(--on-secondary-container);
  padding: 0.25rem 1rem;
  font-variation-settings: "FILL" 1;
}

:is(nav, .row):is(.left-align, .top-align, .vertical) {
  justify-content: flex-start;
}

:is(nav, .row):is(.right-align, .bottom-align) {
  justify-content: flex-end;
}

:is(nav, .row):is(.center-align, .middle-align) {
  justify-content: center;
}

:is(nav, .row):is(.left-align, .top-align, .vertical).vertical {
  align-items: flex-start;
}

:is(nav, .row):is(.right-align, .bottom-align).vertical {
  align-items: flex-end;
}

:is(nav, .row):is(.center-align, .middle-align).vertical {
  align-items: center;
}

:is(.drawer, .vertical) > :is(li, [class*=divider]):not(.vertical),
:is(.drawer, .vertical) > :is(ol, ul) > li:not(.vertical) {
  align-self: stretch;
}

nav:not(.left, .right) > .space {
  inline-size: 0.5rem;
}

nav:not(.left, .right) > .medium-space {
  inline-size: 1rem;
}

nav:not(.left, .right) > .large-space {
  inline-size: 1.5rem;
}

nav.tabbed {
  background-color: var(--surface-container);
  border-radius: 4rem !important;
  gap: 0rem;
  overflow-x: auto;
  block-size: 4rem;
}

nav.tabbed.small {
  block-size: 3rem;
}

nav.tabbed.large {
  block-size: 5rem;
}

nav.tabbed > a {
  border-radius: inherit;
  block-size: inherit;
  display: inline-flex;
  align-items: center;
  padding-inline: 1rem;
  gap: 0.5rem;
  font-size: 1rem;
  flex: 1;
}

nav.tabbed > a.active {
  background-color: var(--primary-container);
}

@media only screen and (max-width: 600px) {
  nav.top,
  nav.bottom {
    justify-content: space-around;
  }
}
